type UserConnection {
  edges: [UserEdge!]!
  pageInfo: PageInfo!
}

type UserEdge {
  cursor: String!
  node: User!
}

type User {
  id: ID!
  username: String!
  email: String!
  firstName: String!
  lastName: String!
}

type SignIn {
  token: String!
}

input SignInInput {
  email: String!
  password: String!
}

extend type Query {
  allUsers(after: String, before: String, first: Int, last: Int): UserConnection!
  user(id: ID!): User!
  me: User
}

extend type Mutation {
  signIn(input: SignInInput!): SignIn!
}